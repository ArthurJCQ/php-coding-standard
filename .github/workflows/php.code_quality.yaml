name: PHP - Code quality

on:
  pull_request:

env:
  PHP_VERSION: 8.3.0

jobs:
  cache_dependencies:
    name: Fetch composer dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Fetch latest changes
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
      - name: Prepare/restore dependencies cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          # NOTE: the allows to reuse it if the composer.json has not changed
          key: composer/${{ runner.os }}/${{ hashFiles('**/composer.json') }}
          path: |
            composer.lock
            vendor/
      - name: Install/update dependencies
        uses: php-actions/composer@8a65f0d3c6a1d17ca4800491a40b5756a4c164f3
        with:
          php_version: ${{ env.PHP_VERSION }}
          args: --ignore-platform-reqs

  php_analysis:
    name: Code quality checks
    runs-on: ubuntu-latest
    needs: [cache_dependencies]
    strategy:
      fail-fast: false
      matrix:
        tool: [phpcs, phpmd, phpstan, phpunit]
    steps:
      - name: Setup PHP ${{ env.PHP_VERSION }} environment
        uses: shivammathur/setup-php@c665c7a15b5295c2488ac8a87af9cb806cd72198
        with:
          php-version: ${{ env.PHP_VERSION }}
      - name: Fetch lastest changes
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
      - name: Restore dependencies cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          key: composer/${{ runner.os }}/${{ hashFiles('**/composer.json') }}
          path: |
            composer.lock
            vendor/
      - name: Run ${{ matrix.tool }}
        run: make ${{ matrix.tool }}-ci
      - name: Upload ${{ matrix.tool }} reports
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        if: always()
        with:
          name: ${{ matrix.tool }}-reports
          path: build/**/*.junit.xml
          retention-days: 1

  php_report:
    name: Report PHP code quality
    runs-on: ubuntu-latest
    needs: [php_analysis]
    if: always()
    steps:
      - name: Create build/ directory
        run: mkdir -p build

      # NOTE: only phpunit, phpcs generate reports
      - name: Download phpunit reports
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e
        with:
          name: phpunit-reports
          path: build/
      - name: Download phpcs reports
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e
        with:
          name: phpcs-reports
          path: build/

      - name: Report analisys results
        uses: mikepenz/action-junit-report@5f47764eec0e1c1f19f40c8e60a5ba47e47015c5
        with:
          check_name: See PHP code quality reports
          report_paths: build/reports/*.xml
